package com.ping.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.gxb.gxswallet.db.asset.AssetData;
import com.gxb.gxswallet.db.contact.ContactData;
import com.gxb.gxswallet.db.wallet.WalletData;

import com.ping.greendao.gen.AssetDataDao;
import com.ping.greendao.gen.ContactDataDao;
import com.ping.greendao.gen.WalletDataDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig assetDataDaoConfig;
    private final DaoConfig contactDataDaoConfig;
    private final DaoConfig walletDataDaoConfig;

    private final AssetDataDao assetDataDao;
    private final ContactDataDao contactDataDao;
    private final WalletDataDao walletDataDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        assetDataDaoConfig = daoConfigMap.get(AssetDataDao.class).clone();
        assetDataDaoConfig.initIdentityScope(type);

        contactDataDaoConfig = daoConfigMap.get(ContactDataDao.class).clone();
        contactDataDaoConfig.initIdentityScope(type);

        walletDataDaoConfig = daoConfigMap.get(WalletDataDao.class).clone();
        walletDataDaoConfig.initIdentityScope(type);

        assetDataDao = new AssetDataDao(assetDataDaoConfig, this);
        contactDataDao = new ContactDataDao(contactDataDaoConfig, this);
        walletDataDao = new WalletDataDao(walletDataDaoConfig, this);

        registerDao(AssetData.class, assetDataDao);
        registerDao(ContactData.class, contactDataDao);
        registerDao(WalletData.class, walletDataDao);
    }
    
    public void clear() {
        assetDataDaoConfig.clearIdentityScope();
        contactDataDaoConfig.clearIdentityScope();
        walletDataDaoConfig.clearIdentityScope();
    }

    public AssetDataDao getAssetDataDao() {
        return assetDataDao;
    }

    public ContactDataDao getContactDataDao() {
        return contactDataDao;
    }

    public WalletDataDao getWalletDataDao() {
        return walletDataDao;
    }

}
